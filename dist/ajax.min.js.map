{"version":3,"sources":["ajax.js"],"names":["global","factory","exports","module","define","amd","Ajax","this","xhrObj","type","opts","postData","catch","xmlHttp","window","XMLHttpRequest","ActiveXObject","open","method","url","async","withCredentials","i","headers","setRequestHeader","send","mergeHeaders","_headers","parseResponse","res","content","JSON","parse","responseText","e","status","data","request_1","_opts","request_2","params","key","push","join","stringify","Content-Type","baseUrl","prototype","then","success","error","_this","readyState","setTimeout","creatOpts","toUpperCase","ajax","methods_2","indexOf","toLowerCase","methods_1","config","j"],"mappings":"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","file":"ajax.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Ajax = factory());\n}(this, (function () { 'use strict';\n\n/*\r\n  xml请求构造函数\r\n*/\nfunction xhrObj(type, opts, postData) {\n\tthis.type = type;\n\tthis.opts = opts;\n\tthis.postData = postData;\n\tthis.catch = opts.catch;\n\tthis.xmlHttp = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n\tthis.xmlHttp.open(opts.method, opts.url, opts.async);\n\tthis.xmlHttp.withCredentials = opts.withCredentials;\n\tfor (var i in this.opts.headers) {\n\t\tthis.xmlHttp.setRequestHeader(i, this.opts.headers[i]);\n\t}\n\tif (type == \"methods_1\") {\n\t\tthis.xmlHttp.send(null);\n\t} else {\n\n\t\tthis.xmlHttp.send(this.postData);\n\t}\n\treturn this;\n}\n/*\r\n  请求回调\r\n*/\nxhrObj.prototype.then = function (success, error) {\n\tvar _this = this;\n\n\tif (this.xmlHttp.readyState == 4) {\n\t\tthis.catch(parseResponse(this.xmlHttp));\n\t\tif (this.xmlHttp.status >= 200 && this.xmlHttp.status < 300) {\n\t\t\tsuccess(parseResponse(this.xmlHttp));\n\t\t} else {\n\t\t\terror(parseResponse(this.xmlHttp));\n\t\t}\n\t} else {\n\t\tsetTimeout(function () {\n\t\t\t_this.then(success, error);\n\t\t}, 20);\n\t}\n};\n\n// 请求headers合并\nfunction mergeHeaders(headers, _headers) {\n\tfor (var i in _headers) {\n\t\theaders[i] = _headers[i];\n\t}\n\treturn _headers;\n}\n// 构建返回体\nfunction parseResponse(res) {\n\ttry {\n\t\tvar content = JSON.parse(res.responseText);\n\t} catch (e) {\n\t\tvar content = res.responseText;\n\t}\n\tvar data = {\n\t\tstatus: res.status,\n\t\tdata: content\n\t};\n\treturn data;\n}\n\nfunction request_1(_opts) {\n\treturn new xhrObj(\"methods_1\", _opts);\n}\n\nfunction request_2(_opts) {\n\tvar opts = _opts;\n\tvar params = [];\n\tfor (var key in opts.data) {\n\t\tparams.push(key + '=' + opts.data[key]);\n\t}\n\tvar postData = params.join('&');\n\tvar postData = JSON.stringify(opts.data);\n\treturn new xhrObj(\"methods_2\", opts, postData);\n}\n\n/*\r\n    ajax构造函数\r\n*/\nfunction Ajax() {\n\t// 注册初始配置\n\tthis.opts = {};\n\tthis.opts.headers = {\n\t\t'Content-Type': 'application/json;charset=utf-8'\n\t};\n\tthis.opts.method = 'POST';\n\tthis.opts.async = true;\n\tthis.opts.data = null;\n\tthis.opts.url = \"\";\n\tthis.opts.baseUrl = \"\";\n\n\t// 默认跨域不带cookie\n\tthis.withCredentials = false;\n\n\t// 注册拦截函数\n\tthis.catch = function () {};\n}\n\n/*\r\n  整合opt\r\n*/\nAjax.prototype.creatOpts = function (opts) {\n\tvar _opts = this.opts;\n\tfor (var i in opts) {\n\t\tif (i == \"headers\") {\n\t\t\t_opts[i] = mergeHeaders(_opts[i], opts[i]);\n\t\t}\n\t\t_opts[i] = opts[i];\n\t}\n\n\t_opts.method = opts.method && opts.method.toUpperCase();\n\n\t_opts.catch = this.catch;\n\treturn _opts;\n};\n\n/*\r\n  ajax方法\r\n*/\nAjax.prototype.ajax = function (_opts) {\n\tvar opts = this.creatOpts(_opts);\n\tif (methods_2.indexOf(opts.method.toLowerCase()) !== -1) {\n\t\tvar xml = request_2(opts);\n\t\treturn xml;\n\t} else if (methods_1.indexOf(opts.method.toLowerCase()) !== -1) {\n\t\tvar xml = request_1(opts);\n\t\treturn xml;\n\t}\n\topts.url = this.opts.baseUrl + opts.url;\n\treturn new xhrObj(opts, xmlHttp);\n};\n\n/*\r\n  暴露一个配置方法\r\n*/\nAjax.prototype.config = function (opts) {\n\tfor (var i in opts) {\n\t\tif (i == \"headers\") {\n\t\t\topts[i] = mergeHeaders(this.opts[i], opts[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tthis.opts[i] = opts[i];\n\t}\n};\n\n// 请求方法集合\nvar methods_1 = ['get', 'delete', 'head', 'options']; //不带data\nvar methods_2 = ['post', 'put', 'patch']; //带data\nfor (var i in methods_1) {\n\t!function (methods_1, i) {\n\t\tAjax.prototype[methods_1[i]] = function (url, _opts) {\n\n\t\t\tvar opts = this.creatOpts(_opts || {});\n\t\t\topts.method = methods_1[i].toUpperCase();\n\t\t\topts.url = this.opts.baseUrl + url;\n\n\t\t\tvar xml = request_1(opts);\n\t\t\treturn xml;\n\t\t};\n\t}(methods_1, i);\n}\nfor (var j in methods_2) {\n\t!function (methods_2, j) {\n\t\tAjax.prototype[methods_2[j]] = function (url, data, opts) {\n\t\t\topts = this.creatOpts(opts || {});\n\t\t\topts.method = methods_2[j].toUpperCase();\n\t\t\topts.url = this.opts.baseUrl + url;\n\t\t\topts.data = data || {};\n\n\t\t\tvar xml = request_2(opts);\n\t\t\treturn xml;\n\t\t};\n\t}(methods_2, j);\n}\n\n// 检验是否浏览器环境\ntry {\n    \n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\nvar index = new Ajax();\n\nreturn index;\n\n})));\n"]}