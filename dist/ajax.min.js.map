{"version":3,"sources":["ajax.js"],"names":["global","factory","exports","module","define","amd","self","Ajax","this","mergeOpt","opt","opt2","i","j","Xhr","resolve","reject","xhr","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","res","responseText","JSON","parse","status","headers","getAllResponseHeaders","split","catch","open","method","url","async","setRequestHeader","send","data","isPromise","Promise","Defer","bind","then","call","FileUpload","dom","_this","onload","evt","fileItem","isUpload","isUploadding","onSuccessItem","parseBody","clearUploadFile","onerror","isError","onErrorItem","upload","onprogress","progress","progressBar","lengthComputable","max","total","value","loaded","percent","Math","round","pertime","Date","getTime","ot","perload","oloaded","speed","bspeed","units","toFixed","resttime","onProgressItem","onloadstart","target","defaultOpt","baseUrl","Content-Type","withCredentials","prototype","file","files","form","FormData","append","stringify","formData","addr","isCancel","isUploadClear","autoUpload","onBeforeUploadItem","cancleUploadFile","abort","methods_1","methods_2","_loop","_opts","opts","toUpperCase","_loop2","cache","push","join","ajax","options","toLowerCase","indexOf","Error","e","config","uploader","id","_opt","document","getElementById"],"mappings":"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","file":"ajax.min.js","sourcesContent":["(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n        typeof define === 'function' && define.amd ? define(factory) :\n        (global = global || self, global.Ajax = factory());\n}(this, function() {\n    'use strict';\n\n    /**\n     * 合并配置项\n     * @opt \t\t\t基准项\n     * @opt2\t \t\t合并项\n     * return \t\t\toptions\n     */\n    function mergeOpt(opt, opt2) {\n        for (var i in opt) {\n\n            if (i === 'headers') {\n                opt2[i] = opt2[i] || {};\n                for (var j in opt[i]) {\n                    opt2[i][j] = opt2[i][j] || opt[i][j];\n                    continue;\n                }\n            }\n\n            opt2[i] = opt2[i] || opt[i];\n        }\n\n        return opt2;\n    }\n\n    /**\n     * 执行请求函数\n     * @opt \t\t\t请求配置\n     * @resolve \t\t请求成功函数\n     * @reject \t\t\t请求失败函数\n     */\n    function Xhr(opt, resolve, reject) {\n        var xhr = void 0;\n\n        if (window.XMLHttpRequest) {\n            xhr = new XMLHttpRequest();\n        } else {\n            xhr = new ActiveXObject('Microsoft.XMLHTTP');\n        }\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4) {\n                var res = xhr.responseText ? JSON.parse(xhr.responseText) : '';\n                var status = xhr.status;\n                var headers = xhr.getAllResponseHeaders().split('\\n');\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    // ssucess\n                    resolve(res, status, headers);\n                } else {\n                    // error\n                    reject(res, status, headers);\n                }\n\n                opt.catch(res, status, headers);\n            }\n        };\n\n        xhr.open(opt.method, opt.url, opt.async);\n\n        for (var i in opt.headers) {\n            xhr.setRequestHeader(i, opt.headers[i]);\n        }\n\n        xhr.send(opt.data);\n    }\n\n    // 检测是否支持promise\n    var isPromise = !!window.Promise;\n\n    /**\n     * 包裹请求函数\n     * @opt \t\t\t请求配置\n     * return \t\t\t返回一个promise对象,或者一个带then函数的对象\n     */\n    function Defer(opt) {\n        var P = void 0;\n\n        if (isPromise) {\n            P = new Promise(Xhr.bind(null, opt));\n        } else {\n            P = {};\n            P.then = function(resolve, reject) {\n                Xhr.call(null, opt, resolve, reject);\n            };\n        }\n\n        return P;\n    }\n\n    /**\n     * 文件上传\n     * @dom \t\t监控dom元素\n     * @opt \t\t上传配置\n     */\n    function FileUpload(dom, opt) {\n        var _this = this;\n\n        var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n        xhr.onload = uploadComplete.bind(this); // 请求完成\n        xhr.onerror = uploadFailed.bind(this); // 请求失败\n        xhr.upload.onprogress = progressFunction.bind(this); // 上传进度调用方法实现\n\n        var ot = void 0,\n            oloaded = void 0;\n        // 上传开始执行方法\n        xhr.upload.onloadstart = function() {\n            ot = new Date().getTime(); //设置上传开始时间\n            oloaded = 0; //设置上传开始时，以上传的文件大小为0\n            _this.fileItem.isUploadding = true;\n        };\n\n        this.opt = opt;\n        this.xhr = xhr;\n        this.dom = dom;\n\n        // 上传成功响应\n        function uploadComplete(evt) {\n            this.fileItem.isUpload = true;\n            this.fileItem.isUploadding = false;\n            this.onSuccessItem(this.fileItem, parseBody(evt).res, parseBody(evt).status);\n            this.clearUploadFile();\n        }\n        // 上传失败\n        function uploadFailed(evt) {\n            this.fileItem.isError = true;\n            this.fileItem.isUploadding = false;\n            this.onErrorItem(this.fileItem, parseBody(evt).res, parseBody(evt).status);\n            this.clearUploadFile();\n        }\n\n        // 上传进度实现方法，上传过程中会频繁调用该方法\n        function progressFunction(evt) {\n            var progress = {}; // 包含上传百分百 速度\n            var progressBar = {};\n            if (evt.lengthComputable) {\n                //\n                progressBar.max = evt.total;\n                progressBar.value = evt.loaded;\n                progress.percent = Math.round(evt.loaded / evt.total * 100);\n            }\n            var nt = new Date().getTime(); // 获取当前时间\n            var pertime = (nt - ot) / 1000; // 计算出上次调用该方法时到现在的时间差，单位为s\n            ot = new Date().getTime(); // 重新赋值时间，用于下次计算\n            var perload = evt.loaded - oloaded; // 计算该分段上传的文件大小，单位b\n            oloaded = evt.loaded; // 重新赋值已上传文件大小，用以下次计算\n            //上传速度计算\n            var speed = perload / pertime; // 单位b/s\n            var bspeed = speed;\n            var units = 'b/s'; // 单位名称\n            if (speed / 1024 > 1) {\n                speed = speed / 1024;\n                units = 'Kb/s';\n            }\n            if (speed / 1024 > 1) {\n                speed = speed / 1024;\n                units = 'Mb/s';\n            }\n            speed = speed.toFixed(1);\n            //剩余时间\n            var resttime = ((evt.total - evt.loaded) / bspeed).toFixed(1);\n            progress.speed = speed + units;\n            progress.resttime = resttime;\n\n            if (bspeed == 0) progress.bspeed = '上传已取消';\n            this.onProgressItem(this.fileItem, progress);\n        }\n    }\n\n    FileUpload.prototype = {\n        upload: function upload() {\n            var file = this.dom.files[0];\n            var opt = this.opt;\n\n            var form = new FormData();\n            form.append(\"file\", file); // 文件对象\n            form.append(\"parm\", JSON.stringify(opt.data)); // 文件对象添加额外参数\n\n            // 构建fileItem\n            var fileItem = {\n                formData: form,\n                url: opt.url || \"\",\n                data: opt.data || \"\",\n                addr: this.dom.value || \"\",\n                isUpload: false,\n                isCancel: false,\n                isUploadding: false,\n                isError: false,\n                isUploadClear: opt.isUploadClear || false,\n                autoUpload: opt.autoUpload || false\n            };\n            this.fileItem = fileItem;\n\n            this.xhr.open(\"post\", this.opt.url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。\n            this.onBeforeUploadItem(this.fileItem);\n            this.xhr.send(this.fileItem.formData); //开始上传，发送form数据\n        },\n        onSuccessItem: function onSuccessItem() {},\n        onBeforeUploadItem: function onBeforeUploadItem() {},\n        onErrorItem: function onErrorItem() {},\n        onProgressItem: function onProgressItem() {},\n        clearUploadFile: function clearUploadFile() {\n            if (this.fileItem.isUploadClear) {\n                this.dom.value = \"\";\n                this.dom.files = null;\n            }\n        },\n        cancleUploadFile: function cancleUploadFile() {\n            this.fileItem.isCancel = true;\n            this.fileItem.isUploadding = false;\n            this.fileItem.isUpload = false;\n            this.xhr.abort();\n            this.clearUploadFile();\n        }\n    };\n\n    function parseBody(evt) {\n        return {\n            res: JSON.parse(evt.target.responseText),\n            status: evt.target.status\n        };\n    }\n\n    // 默认设置\n    var defaultOpt = {\n        baseUrl: '',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        // 默认异步操作\n        async: true,\n        // 默认跨域不带cookie\n        withCredentials: false\n\n        /**\n         * Ajax构造函数\n         */\n    };\n\n    function Ajax() {}\n\n    // 请求方法集合\n    var methods_1 = ['get', 'delete', 'head', 'options']; //不带data\n    var methods_2 = ['post', 'put', 'patch']; //带data\n\n    var _loop = function _loop(i) {\n        Ajax.prototype[methods_1[i]] = function(url, _opts) {\n\n            _opts = _opts || {};\n\n            var opts = mergeOpt(defaultOpt, _opts);\n\n            opts.method = methods_1[i].toUpperCase();\n\n            opts.url = opts.baseUrl + url;\n\n            opts.data = null;\n\n            opts.catch = this.catch;\n\n            return Defer(opts);\n        };\n    };\n\n    for (var i in methods_1) {\n        _loop(i);\n    }\n\n    var _loop2 = function _loop2(j) {\n        Ajax.prototype[methods_2[j]] = function(url, data, _opts) {\n\n            _opts = _opts || {};\n\n            if (!_opts.headers) {\n                _opts.headers = {};\n                _opts.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n            } else {\n                if (!_opts.headers['Content-Type']) {\n                    _opts.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n                }\n            }\n\n            var opts = mergeOpt(defaultOpt, _opts);\n\n            opts.method = methods_2[j].toUpperCase();\n\n            opts.url = opts.baseUrl + url;\n\n            opts.data = data;\n\n            opts.catch = this.catch;\n\n            if (opts.data) {\n                var cache = [];\n\n                for (var i in opts.data) {\n                    cache.push(i + '=' + opts.data[i]);\n                }\n\n                opts.data = cache.join('&');\n            }\n\n            return Defer(opts);\n        };\n    };\n\n    for (var j in methods_2) {\n        _loop2(j);\n    }\n\n    /**\n     * 纯配置请求函数\n     */\n    Ajax.prototype.ajax = function(options) {\n        try {\n            var method = options.method.toLowerCase();\n\n            if (methods_1.indexOf(method) !== -1) {\n                return this[method](options.url, options);\n            } else if (methods_2.indexOf(method) !== -1) {\n                return this[method](options.url, options.data, options);\n            } else {\n                throw new Error('error');\n            }\n        } catch (e) {\n            throw new Error(e);\n        }\n    };\n\n    /** \n     * 暴露默认配置\n     */\n    Ajax.prototype.config = function(opt) {\n        defaultOpt = mergeOpt(defaultOpt, opt);\n    };\n\n    /** \n     * 注册拦截函数\n     */\n    Ajax.prototype.catch = function() {};\n\n    /** \n     * 文件上传\n     */\n    Ajax.prototype.uploader = function(id, _opt) {\n        _opt = _opt || {};\n        var opt = mergeOpt(defaultOpt, _opt);\n\n        opt.url = opt.baseUrl + opt.url;\n\n        var dom = document.getElementById(id);\n\n        return new FileUpload(dom, opt);\n    };\n\n    // 检验是否浏览器环境\n    try {} catch (ex) {\n        throw new Error('请在浏览器环境下运行');\n    }\n\n    var index = new Ajax();\n\n    return index;\n\n}));"]}